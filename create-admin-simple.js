const bcrypt = require('bcryptjs');
require('dotenv').config();

/**
 * Script simple para mostrar las credenciales de administrador
 * No requiere conexi√≥n a base de datos
 */

async function showAdminCredentials() {
  try {
    console.log('\nüéâ Credenciales de Administrador para Jooru');
    console.log('=' .repeat(50));
    console.log('\nüìã Credenciales de acceso:');
    console.log('   Email: admin@jooru.com');
    console.log('   Contrase√±a: Admin123!');
    console.log('\nüîó Panel de administraci√≥n: http://localhost:3001');
    console.log('\nüìù Instrucciones:');
    console.log('   1. Aseg√∫rate de que el backend est√© ejecut√°ndose');
    console.log('   2. Ve al panel de administraci√≥n en http://localhost:3001');
    console.log('   3. Usa las credenciales mostradas arriba');
    console.log('   4. Si no funciona, ejecuta el script completo cuando MongoDB est√© disponible');
    console.log('\n‚ö†Ô∏è  IMPORTANTE:');
    console.log('   - Estas credenciales deben crearse en la base de datos');
    console.log('   - Si MongoDB no est√° disponible, inst√°lalo primero');
    console.log('   - Cambia la contrase√±a despu√©s del primer acceso');
    
    // Generar hash de la contrase√±a para referencia
    const hashedPassword = await bcrypt.hash('Admin123!', 12);
    console.log('\nüîê Hash de contrase√±a (para referencia t√©cnica):');
    console.log(`   ${hashedPassword}`);
    
    console.log('\nüí° Para instalar MongoDB:');
    console.log('   - Descarga MongoDB Community Edition desde mongodb.com');
    console.log('   - O usa MongoDB Atlas (cloud) y actualiza MONGODB_URI en .env');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  }
}

// Ejecutar el script
if (require.main === module) {
  showAdminCredentials();
}

module.exports = showAdminCredentials;